\documentclass{article}
\oddsidemargin=0cm
\textwidth=17cm

\usepackage{hyperref}
\hypersetup{pdfstartview=FitH,  linkcolor=blue, urlcolor=blue, colorlinks=true}

\usepackage{caption}
\usepackage{subcaption} % captions for subfigures
\usepackage{graphicx}
\graphicspath{{./img/}}
\usepackage{float} % force pictures position with \begin{figure}[H]
\newcommand{\myPictWidth}{.99\textwidth}


\begin{document}

\title{Processing microarray data}
\author{Valerii Zuev}
\maketitle

\section{Task}

Microarray analysis based on a study of patients with systematic lupus erythematosus and rheumatoid arthritis \cite{smiljanovich2012}.

All necessary data used in this work is available at \href{https://www.ebi.ac.uk/arrayexpress/experiments/E-GEOD-38351/}{ArrayExpress} and \href{https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE38351}{GEO} sites.


\section{Solution}

Preparing workspace (change \texttt{data\_dir} to a valid path on your machine):
<<cache=T>>=
library(dplyr)
data_dir <- "E:/Users/vzuev/github-zuevval/source/r/bioinf2021/lab1microarrays/out"
setwd(data_dir)
@

Loading data (it consists of two assays, first is the result of AFFY-44 and second of AFFY-33 scan).

If you run this code for the first time, un-comment commented lines to download files from the web.

% computation,results=hide,cache=T

<<cache=T,results='hide'>>=
geod_list_filename <- "geod38351.RData"
# geod38351 <- ArrayExpress::getAE("E-GEOD-38351", type = "full")
# save(geod38351, file=geod_list_filename)
load(geod_list_filename)
aesets <- ArrayExpress::ae2bioc(mageFiles = geod38351)
aeset1 <- aesets[[1]] # AFFY-44
aeset2 <- aesets[[2]] # AFFY-33
@

Finding factor:
<<cache=T>>=
colnames1 <- colnames(pData(aeset1))
fac <- colnames1[grep("Factor", colnames1)]
fac
@

Assessing quality:
<<cache=T>>=
# devnull <- mapply(function(outdir = ? str, eset = ? ExpressionSet) {
#  arrayQualityMetrics::arrayQualityMetrics(
#    expressionset = eset,
#    outdir = outdir,
#    force = FALSE,
#    do.logtransform = TRUE,
#    intgroup = fac)
#}, list("qaraw_geod_38351_1", "qaraw_geod_38351_2"), c(aeset1, aeset2))
@

\begin{figure}[H]
    \centering
    \begin{subfigure}{.5\textwidth}
        \centering
        \includegraphics[width=\myPictWidth]{box1}
        \caption{boxplot (assay 1)}
    \end{subfigure}%
    \begin{subfigure}{.5\textwidth}
        \centering
        \includegraphics[width=\myPictWidth]{box2}
        \caption{boxplot (assay 2)}
    \end{subfigure}
    \begin{subfigure}{.5\textwidth}
        \centering
        \includegraphics[width=\myPictWidth]{ma1}
        \caption{MA plot (assay 1)}
    \end{subfigure}%
    \begin{subfigure}{.5\textwidth}
        \centering
        \includegraphics[width=\myPictWidth]{ma2}
        \caption{MA plot (assay 2)}
    \end{subfigure}
\caption{Quality metrics}
\end{figure}

The set \texttt{aeset1} contains an outlier (sample  \textnumero 1).
We'll drop this sample and normalize counts:

% computation,results=hide,cache=T
<<cache=T>>=
c_aeset1 <- oligo::rma(aeset1[, -1])
c_aeset2 <- oligo::rma(aeset2)
@

Changing groups names to feed them as factors for linear regression and preparing groups:

* healthy patients, stimulated
* ill patients, not stimulated

<<cache=T>>=
c_aeset_colnames <- c("stimulus", "disease")
groups1 <- pData(c_aeset1)[, fac]
groups1[groups1 == "incubated for 1.5 hour without any stimulation"] <- "incub"
groups1[groups1 == "no incubation"] <- "noincub"
groups1[groups1 == "stimulated with IFN-gamma for 1.5 hour"] <- "ig"
groups1[groups1 == "stimulated with IFN-alpha-2a for 1.5 hour"] <- "ia"
groups1[groups1 == "stimulated with TNF-alpha for 1.5 hour"] <- "ta"
groups1
colnames(groups1) <- c_aeset_colnames
c_aeset_stimulus <- c_aeset1[, groups1$disease == "normal"] # drop ill patients
groups_stimulus <- groups1 %>%
  filter(disease == "normal") %>% # drop ill patients
  select(-disease)

groups2 <- pData(c_aeset2)[, fac]
groups2[groups2 == "rheumatoid arthritis"] <- "ra"
groups2[groups2 == "systemic lupus erythematosus"] <- "sl"
colnames(groups2) <- c_aeset_colnames
groups2
c_aeset_disease <- c_aeset2 # just define a new name for convenience
groups_disease <- groups2 %>% select(-stimulus)
@

Fitting linear model and computing a set of statistics with \texttt{eBayes} for stimulated monocytes:

<<cache=T>>=
f_stimulus <- factor(unlist(groups_stimulus))
design_stimulus <- model.matrix(~f_stimulus)
colnames(design_stimulus) <- colnames(design_stimulus) %>% lapply(function(x) gsub("f_stimulus", "", x))
print(design_stimulus)
print(limma::is.fullrank(design_stimulus)) # should be TRUE

fit_stimulus <- limma::lmFit(c_aeset_stimulus, design_stimulus)
fit_stimulus2 <- limma::eBayes(fit_stimulus)
head(fit_stimulus2$coefficients)
png(filename = "./img/volcanoplot_stimulus.png")
par(mfrow = c(1, 2))
limma::volcanoplot(fit_stimulus2, coef = "ta", highlight = 15, main = "stimulus: TNF-alpha")
limma::volcanoplot(fit_stimulus2, coef = "ig", highlight = 15, main = "stimulus: IFN-gamma")
dev.off()
@

\begin{figure}[H]
    \centering
    \includegraphics[width=0.8\textwidth]{volcanoplot_stimulus}
    \caption{volcanoplot (stimulated monocytes)}
\end{figure}

Fitting linear model for patients with diseases:

<<cache=T>>=
f_disease <- factor(unlist(groups_disease))
design_disease <- model.matrix(~f_disease)
colnames(design_disease) <- colnames(design_disease) %>% lapply(function(x) gsub("f_disease", "", x))
print(design_disease)
print(limma::is.fullrank(design_disease)) # should be TRUE

fit_disease <- limma::lmFit(c_aeset_disease, design_disease)
fit_disease2 <- limma::eBayes(fit_disease)
head(fit_disease2$coefficients)
png(filename = "./img/volcanoplot_disease.png")
par(mfrow = c(1, 2))
limma::volcanoplot(fit_disease2, coef = "ra", highlight = 15, main = "rheumatoid arthritis")
limma::volcanoplot(fit_disease2, coef = "sl", highlight = 15, main = "systemic lupus erythematosus")
dev.off()
@

\begin{figure}[H]
    \centering
    \includegraphics[width=0.8\textwidth]{volcanoplot_disease}
    \caption{volcanoplot (RA / SLE patients)}
\end{figure}

Filtering genes by p-values and drawing heatmap + clustering trees:
<<cache=T>>=
draw_clust_heatmap <- function(c_aeset, groups, fit, pval_thresh, coef, title){
  results <- limma::topTable(fit, coef = coef, adjust = "BH", number = nrow(c_aeset))
  print(as.integer(results[, "P.Value"] < pval_thresh) %>%
          na.exclude %>%
          sum) # how many differentially expressed genese were found?
  topgenes <- results[results[, "P.Value"] < pval_thresh,]
  diffexpr_ids <- rownames(topgenes)

  diffexpr_ids %>%
    unlist %>%
    write.table(paste0("./genes_diffexpr_", title, ".csv"),
                sep = ",", row.names = F, col.names = F, quote = F)
  results %>%
    rownames %>%
    unlist %>%
    write.table(paste0("./genes_background_", title, ".csv"),
                sep = ",", row.names = F, col.names = F, quote = F)

  m <- exprs(c_aeset[diffexpr_ids,])
  ncol(m)
  colnames(m) <- unlist(groups[1])
  png(filename = paste0("./img/heatmap_", title, ".png"))
  heatmap(m)
  dev.off()
}

c_aeset_ra <- c_aeset_disease[, groups_disease$disease != "sl"]
c_aeset_sl <- c_aeset_disease[, groups_disease$disease != "ra"]
groups_ra <- groups_disease %>% filter(disease != "sl")
groups_sl <- groups_disease %>% filter(disease != "ra")

devnull <- mapply(draw_clust_heatmap,
                  list(c_aeset_stimulus, c_aeset_ra, c_aeset_sl),
                  list(groups_stimulus, groups_ra, groups_sl),
                  list(fit_stimulus2, fit_disease2, fit_disease2),
                  list(1e-7, 5 * 1e-3, 2 * 1e-3),
                  list("ig", "ra", "sl"),
                  list("stimulus", "ra", "sl"))
@

\begin{figure}[H]
    \centering
    \includegraphics[width=0.8\textwidth]{heatmap_stimulus}
    \caption{heatmap (different stimuluses)}
\end{figure}

\begin{figure}[H]
    \centering
    \includegraphics[width=0.8\textwidth]{heatmap_sl}
    \caption{heatmap (patients with SLE v/s healthy)}
\end{figure}

\begin{figure}[H]
    \centering
    \includegraphics[width=0.8\textwidth]{heatmap_ra}
    \caption{heatmap (patients with RA v/s healthy)}
\end{figure}

\section{Conclusion}

One outlier has been found during quality analysis.

\begin{thebibliography}{99}
    \bibitem{smiljanovich2012} Smiljanovic, B., Grun, J.R., Biesen, R. et al. The multifaceted balance of TNF-$\alpha$ and type I/II interferon responses in SLE and RA: how monocytes manage the impact of cytokines. J Mol Med 90, 1295-1309 (2012). doi: \href{https://doi.org/10.1007/s00109-012-0907-y}{10.1007/s00109-012-0907-y}
\end{thebibliography}

\end{document}
