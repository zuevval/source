----------------------------------
---Описание функций в db_calls ---
----------------------------------

!Пример правильного написания кода вами в том месте, где нужно использовать функцию, например, обращения к данным онлайн-курсов по id:
var login = 'foo';
var pass = 'abcd';
var online_id = 213;
//var onl = get_online(login, pass,online_id);
var onl = [213, 5, 12, 12, 'практика по экономике'];

Если функции здесь нет, её использовать нельзя :(
Можно попросить меня написать функцию

Отдельно стоит функция check_if_logged_in()
Она проверяет, зашёл ли пользователь. Нет - выводит окошечко с предупреждением
Выходные данные: -1 в случае ошибки, 0 в остальных случаях

------------------------------------
---функции чтения из БД и Cookies---
------------------------------------

get_online(login, pass,online_id)
	login - строка, имя пользователя
	pass - строка, пароль пользователя
	online_id - число от 0 до 400
	Выходные данные - массив с элементами:
		0 - id онлайн-курса
		1- день дедлайна (ноль - сегодня)
		2 - мин. время, которое можно потратить на задание (в пятиминутках)
		3 - макс. время
		4 - название
	Пример:
	Входные данные: 'zuev', 'qwerty', 213
	Выходные данные: [213, 5, 12, 12, 'практика по экономике']

get_nearest_online(login,pass)
	то же, что предыдущая функция. Выводит данные задания онлайн-курса, дедлайн которого ближе всех остальных
	Пример:
	Входные данные: 'zuev', 'qwerty'
	Выходные данные: [212, 2, 6, 12, 'тест по истории']

get_schedule(login,pass,day)
	day - число. 0 - сегодня
	Выходные данные - одномерный массив. Элементы:
	0 - имя первого события
	1 - время начала (в пятиминутках - или лучше иначе?)
	2 - время конца (в пятиминутках)
	3 - имя второго события
	и т. д. Максимум 12 событий
	Пример:
	Входные данные: 'zuev', 'qwerty', 0
	Выходные данные: ["история", 120, 140, "матмоделирование", 144, 164, "физкультура", 168, 188]

get_raw_events(login,pass,day)
	Выходные данные - одномерный массив чисел - идентификаторов
	Пример:
	Входные данные: 'zuev', 'qwerty', 0
	Выходные данные: [201, 202, 203]

get_group_id(login, pass)
	Возвращает номер группы (без разделителя) либо -1, если логин и пароль не совпадают
	Пример:
	Входные данные: 'zuev', 'qwerty'
	Выходные данные: 136322

get_lesson_start(lesson_id,group_id,day)
	Возвращает число - время в пятиминутках
	Пример:
	Входные данные: 201, 136322, 0
	Выходные данные: 120

get_lesson_stop(lesson_id,group_id,day)
	Аналогично get_lesson_start
	Пример:
	Входные данные: 201, 136322, 0
	Выходные данные: 140

get_lesson_name(lesson_id,group_id,day)
	Аналогично get_lesson_start, но возвращает строку
	Пример:
	Входные данные: 201, 136322, 0
	Выходные данные: 'математический анализ'

get_tmtbl_id(group_id, day)
	Выводит список ID пар в этот день в порядке очерёдности
	Вывод - массив трёхзначных чисел (0-12 чисел)
	Пример:

getCookie(cname)
	Входные данные - строка
	Выходные - то, что хранится в этой переменной в cookies либо -1 

--------------------------------------------------
---функции записи в БД и перенаправления по URL---
--------------------------------------------------

redirect_to_input_page(login,pass)
	Записывает в cookies логин и пароль и перенаправляет на inex.php
	Пример: 
	Входные данные: 'zuev', 'qwerty'
	Выходные данные: отсутствуют

write_schedule(login,pass,day,schedule)
	Записывает готовое расписание (рез-т calc_short) в базу данных
	schedule - двумерный массив, т. е. массив массивов.
	В каждой ячейке внешнего массива (всего не более 12 ячеек-событий) лежит массив из трёх эл-тов. Эти элементы:
		0. Название события
		1. Начало (в пятиминутках или минутах)
		2. Конец
	Пример: 
	Входные данные: 'zuev', 'qwerty', 0, schedule
	здесь shedule:
		var schedule= [['история',120,140]];
		schedule[1]=['матмоделирование',144,164];
		schedule[2]=['физкультура',168,188];
	Выходные данные: отсутствуют

write_raw_events(login,pass,day,evnts)
	Записывает в БД одномерный массив идентификаторов событий (всего до 12 чисел)
	Пример: 
	Входные данные: 'zuev', 'qwerty', 0, [201, 202, 203]
	Выходные данные: отсутствуют


